apply plugin: 'com.android.library'
//发布开源项目到JitPack
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.dessmann'
android {
    compileSdkVersion Integer.parseInt(compileSdkVersionG)
    buildToolsVersion buildToolsVersionG

    defaultConfig {
        minSdkVersion Integer.parseInt(minSdkVersionG)
        targetSdkVersion Integer.parseInt(targetSdkVersionG)
        versionCode 5
        versionName "1.0.5"
    }
    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            //res.srcDirs = ['res']
            //java.srcDirs 'src'
            //manifest.srcFile 'AndroidManifest.xml'
            //aidl.srcDirs = ['src']
            //renderscript.srcDirs = ['src']
            assets.srcDirs = ['assets']
            //jniLibs.srcDirs = ['libs']
            //jniLibs.srcDirs = ['jni']
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile files('libs/afinal_0.5.1_bin.jar')
    compile "com.android.support:appcompat-v7:$supportG"
    compile "com.android.support:design:$supportG"
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.yolanda.nohttp:nohttp:1.1.0'
    compile 'io.reactivex:rxjava:1.1.0'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile files('libs/commons-lang3-3.1.jar')
    provided files('src/main/assets')
}

//def SDK_BASENAME = "libdsmplatform";
//def SDK_VERSION = "_V1.0";
//def sdkDestinationPath = "build";
//def zipFile = file('build/intermediates/bundles/release/classes.jar')
//
//task deleteBuild(type: Delete) {
//    delete sdkDestinationPath + SDK_BASENAME + SDK_VERSION + ".jar"
//}
//
//task makeJar(type: Jar) {
//    from zipTree(zipFile)
//    from fileTree(dir: 'src/main',includes: ['assets/**'])//将assets目录打入jar包
//    baseName = SDK_BASENAME + SDK_VERSION
//    destinationDir = file(sdkDestinationPath)
//}
//
//makeJar.dependsOn(deleteBuild, build)
